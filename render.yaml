services:
  # This is your existing web service that runs app.py
  - type: web
    name: backend-results # Use your actual backend service name
    env: python
    buildCommand: "./post_deploy.sh"
    startCommand: gunicorn app:app --bind 0.0.0.0:$PORT
    envVars:
      # IMPORTANT: Make sure your FIREBASE_CREDENTIALS and other secrets
      # are set in the Render dashboard for this service.
      - key: PORT
        value: 10000

  # This is the Cron Job service to run the prediction script
  - type: cron
    name: predictive-model-trainer
    env: python
    # [UPDATED] This schedule now runs the job every day at 9:30 AM UTC (3:00 PM IST).
    schedule: "30 9 * * *"
    # The build command installs all the necessary python packages.
    buildCommand: "pip install -r requirements.txt"
    # The start command runs your prediction script.
    startCommand: "python predictive_service.py"
    envVars:
      # This securely shares the Firebase credentials from your main web service
      # with this cron job, so it can access the database.
      - key: FIREBASE_CREDENTIALS
        fromService:
          type: web
          name: backend-results # This MUST match the name of your web service above
          envVarKey: FIREBASE_CREDENTIALS
